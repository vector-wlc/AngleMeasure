################################################################################
#                                                                              #
#      IAR Universal Linker V6.5.1.95                                          #
#                                                                              #
#           Link time     =  14/Aug/2020  19:44:57                             #
#           Target CPU    =  MSP430                                            #
#           List file     =  G:\study\MSP430\AngleMeasure\Debug\List\Inclinati #
#                            on_measurement.map                                #
#           Output file 1 =  G:\study\MSP430\AngleMeasure\Debug\Exe\Inclinatio #
#                            n_measurement.d43                                 #
#                            Format: ubrof10                                   #
#                            UBROF version 10.0.6                              #
#                            Using library modules for C-SPY (-rt)             #
#           Command line  =  -f C:\Users\23609\AppData\Local\Temp\EWF4A.tmp    #
#                            (G:\study\MSP430\AngleMeasure\Debug\Obj\adxl345.r #
#                            43                                                #
#                            G:\study\MSP430\AngleMeasure\Debug\Obj\i2c.r43    #
#                            G:\study\MSP430\AngleMeasure\Debug\Obj\main.r43   #
#                            G:\study\MSP430\AngleMeasure\Debug\Obj\oled.r43   #
#                            G:\study\MSP430\AngleMeasure\Debug\Obj\uart.r43   #
#                            -o                                                #
#                            G:\study\MSP430\AngleMeasure\Debug\Exe\Inclinatio #
#                            n_measurement.d43                                 #
#                            -l                                                #
#                            G:\study\MSP430\AngleMeasure\Debug\List\Inclinati #
#                            on_measurement.map                                #
#                            -xms -ID:\Software\MSP430\430\LIB\ -f             #
#                            D:\Software\MSP430\430\config\linker\lnk430g2553. #
#                            xcl                                               #
#                            (-cmsp430 -QCODE_I=CODE_ID -QTLS16_I=TLS16_ID     #
#                            -Z(CONST)INFO=1000-10FF                           #
#                            -Z(CONST)INFOA=10C0-10FF                          #
#                            -Z(CONST)INFOB=1080-10BF                          #
#                            -Z(CONST)INFOC=1040-107F                          #
#                            -Z(CONST)INFOD=1000-103F                          #
#                            -Z(DATA)DATA16_I,DATA16_Z,DATA16_N,TLS16_I=0200-0 #
#                            3FF                                               #
#                            -Z(DATA)DATA16_HEAP+_DATA16_HEAP_SIZE             #
#                            -Z(DATA)CODE_I -Z(DATA)CSTACK+_STACK_SIZE#        #
#                            -Z(CONST)DATA16_C,DATA16_ID,TLS16_ID,DIFUNCT,CHEC #
#                            KSUM=C000-FFDD                                    #
#                            -Z(CODE)CSTART,ISR_CODE,CODE_ID=C000-FFDD         #
#                            -P(CODE)CODE=C000-FFDD                            #
#                            -Z(CONST)SIGNATURE=FFDE-FFDF                      #
#                            -Z(CODE)INTVEC=FFE0-FFFF                          #
#                            -Z(CODE)RESET=FFFE-FFFF) -D_STACK_SIZE=50 -rt     #
#                            D:\Software\MSP430\430\lib\dlib\dl430fn.r43       #
#                            -e_PrintfLarge=_Printf -e_ScanfLarge=_Scanf       #
#                            -D_DATA16_HEAP_SIZE=50 -s __program_start         #
#                            -D_DATA20_HEAP_SIZE=50)                           #
#                                                                              #
#                           Copyright (C) 1987-2016 IAR Systems AB.            #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

       Program entry at :           C13C  Relocatable, from module : ?cstart




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  __Heap_Handler             = Basic
  __SystemLibrary            = DLib
  __core                     = 430
  __dlib_file_descriptor     = 0
  __dlib_full_locale_support = 0
  __double_size              = 32
  __pic                      = no
  __reg_r4                   = free
  __reg_r5                   = free
  __rt_version               = 3

                ****************************************
                *                                      *
                *    AUTOMATIC SYMBOL REDIRECTIONS     *
                *                                      *
                ****************************************

                  There are no automatic symbol redirections.



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
    *************************************************************************

  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?ABS_ENTRY_MOD

Absolute parts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _DATA20_HEAP_SIZE       0050 
           _DATA16_HEAP_SIZE       0050 
           _STACK_SIZE             0050 
    *************************************************************************

  FILE NAME : G:\study\MSP430\AngleMeasure\Debug\Obj\adxl345.r43
  PROGRAM MODULE, NAME : adxl345

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: E318 - E31D (0x6 bytes), align: 1
  Segment part 3.             Intra module refs:   Adxl345::Adxl345(uint8_t, uint8_t, uint8_t)
                                                   Oled::Oled(uint8_t, uint8_t, uint8_t) (oled)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2c::I2c()              E318 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: E312 - E317 (0x6 bytes), align: 1
  Segment part 2.             Intra module refs:   Adxl345::Adxl345(uint8_t, uint8_t, uint8_t)
                                                   Oled::Oled(uint8_t, uint8_t, uint8_t) (oled)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2c::SetDelayTime(int)
                                   E312 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: D7C6 - D839 (0x74 bytes), align: 1
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Adxl345::Adxl345(uint8_t, uint8_t, uint8_t)
                                   D7C6            main (main)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: E066 - E095 (0x30 bytes), align: 1
  Segment part 6.             Intra module refs:   Adxl345::getFuYang(uint16_t, uint16_t)
                                                   Adxl345::getHangXiang(uint16_t, uint16_t)
                                                   Adxl345::getHengGun(uint16_t, uint16_t)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Adxl345::doubleToUint16(double)
                                   E066 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: D3E8 - D4C1 (0xda bytes), align: 1
  Segment part 7.             Intra module refs:   Adxl345::GetAngle()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Adxl345::getFuYang(uint16_t, uint16_t)
                                   D3E8 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: D30E - D3E7 (0xda bytes), align: 1
  Segment part 8.             Intra module refs:   Adxl345::GetAngle()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Adxl345::getHengGun(uint16_t, uint16_t)
                                   D30E 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: D234 - D30D (0xda bytes), align: 1
  Segment part 9.             Intra module refs:   Adxl345::GetAngle()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Adxl345::getHangXiang(uint16_t, uint16_t)
                                   D234 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: D4C2 - D589 (0xc8 bytes), align: 1
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Adxl345::GetAngle()     D4C2            main (main)
               calls direct

    *************************************************************************

  FILE NAME : G:\study\MSP430\AngleMeasure\Debug\Obj\i2c.r43
  PROGRAM MODULE, NAME : i2c

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 0020 - 0020 (0x1 bytes), align: 0
  Segment part 1. ROOT        Intra module refs:   I2c::LoadPort(uint8_t, uint8_t, uint8_t, uint8_t)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1IN                    0020 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0021 - 0021 (0x1 bytes), align: 0
  Segment part 2. ROOT        Intra module refs:   I2c::LoadPort(uint8_t, uint8_t, uint8_t, uint8_t)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1OUT                   0021 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0022 - 0022 (0x1 bytes), align: 0
  Segment part 3. ROOT        Intra module refs:   I2c::LoadPort(uint8_t, uint8_t, uint8_t, uint8_t)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1DIR                   0022 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0026 - 0026 (0x1 bytes), align: 0
  Segment part 4. ROOT        Intra module refs:   I2c::LoadPort(uint8_t, uint8_t, uint8_t, uint8_t)
                                                   UartInit() (uart)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1SEL                   0026 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0027 - 0027 (0x1 bytes), align: 0
  Segment part 5. ROOT        Intra module refs:   I2c::LoadPort(uint8_t, uint8_t, uint8_t, uint8_t)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1REN                   0027 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0028 - 0028 (0x1 bytes), align: 0
  Segment part 6. ROOT        Intra module refs:   I2c::LoadPort(uint8_t, uint8_t, uint8_t, uint8_t)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P2IN                    0028 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0029 - 0029 (0x1 bytes), align: 0
  Segment part 7. ROOT        Intra module refs:   I2c::LoadPort(uint8_t, uint8_t, uint8_t, uint8_t)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P2OUT                   0029 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 002A - 002A (0x1 bytes), align: 0
  Segment part 8. ROOT        Intra module refs:   I2c::LoadPort(uint8_t, uint8_t, uint8_t, uint8_t)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P2DIR                   002A 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 002E - 002E (0x1 bytes), align: 0
  Segment part 9. ROOT        Intra module refs:   I2c::LoadPort(uint8_t, uint8_t, uint8_t, uint8_t)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P2SEL                   002E 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 002F - 002F (0x1 bytes), align: 0
  Segment part 10. ROOT       Intra module refs:   I2c::LoadPort(uint8_t, uint8_t, uint8_t, uint8_t)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P2REN                   002F 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: E2E4 - E2ED (0xa bytes), align: 1
  Segment part 12.            Intra module refs:   I2c::receiveAck()
                                                   I2c::receiveByte(uint8_t)
                                                   I2c::sendByte(uint8_t)
                                                   I2c::start()
                                                   I2c::stop()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2c::setSclHigh()       E2E4 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: E2F8 - E301 (0xa bytes), align: 1
  Segment part 13.            Intra module refs:   I2c::receiveAck()
                                                   I2c::receiveByte(uint8_t)
                                                   I2c::sendByte(uint8_t)
                                                   I2c::start()
                                                   I2c::stop()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2c::setSclLow()        E2F8 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: E27C - E287 (0xc bytes), align: 1
  Segment part 14.            Intra module refs:   I2c::SetPortLevel()
                                                   I2c::receiveAck()
                                                   I2c::receiveByte(uint8_t)
                                                   I2c::start()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2c::setSdaOut()        E27C 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: E2A0 - E2AB (0xc bytes), align: 1
  Segment part 15.            Intra module refs:   I2c::receiveByte(uint8_t)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2c::setSdaIn()         E2A0 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: E1A0 - E1B3 (0x14 bytes), align: 1
  Segment part 16.            Intra module refs:   I2c::receiveAck()
                                                   I2c::receiveByte(uint8_t)
                                                   I2c::start()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2c::readSda()          E1A0 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: E2DA - E2E3 (0xa bytes), align: 1
  Segment part 17.            Intra module refs:   I2c::receiveByte(uint8_t)
                                                   I2c::sendByte(uint8_t)
                                                   I2c::start()
                                                   I2c::stop()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2c::setSdaHigh()       E2DA 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: E2D0 - E2D9 (0xa bytes), align: 1
  Segment part 18.            Intra module refs:   I2c::sendByte(uint8_t)
                                                   I2c::start()
                                                   I2c::stop()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2c::setSdaLow()        E2D0 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: DB10 - DB63 (0x54 bytes), align: 1
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2c::LoadPort(uint8_t, uint8_t, uint8_t, uint8_t)
                                   DB10            Adxl345::Adxl345(uint8_t, uint8_t, uint8_t) (adxl345)
                                                   Oled::Oled(uint8_t, uint8_t, uint8_t) (oled)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: E0E6 - E107 (0x22 bytes), align: 1
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2c::SetPortLevel()     E0E6            Adxl345::Adxl345(uint8_t, uint8_t, uint8_t) (adxl345)
                                                   Oled::Oled(uint8_t, uint8_t, uint8_t) (oled)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: DA5E - DAB9 (0x5c bytes), align: 1
  Segment part 23.            Intra module refs:   I2c::ReadByte(uint8_t)
                                                   I2c::WriteByte(uint8_t, uint8_t)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2c::start()            DA5E 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: DE0C - DE49 (0x3e bytes), align: 1
  Segment part 24.            Intra module refs:   I2c::ReadByte(uint8_t)
                                                   I2c::WriteByte(uint8_t, uint8_t)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2c::stop()             DE0C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: DC06 - DC55 (0x50 bytes), align: 1
  Segment part 25.            Intra module refs:   I2c::ReadByte(uint8_t)
                                                   I2c::WriteByte(uint8_t, uint8_t)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2c::receiveAck()       DC06 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: DBB6 - DC05 (0x50 bytes), align: 1
  Segment part 28.            Intra module refs:   I2c::ReadByte(uint8_t)
                                                   I2c::WriteByte(uint8_t, uint8_t)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2c::sendByte(uint8_t)
                                   DBB6 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: E2B8 - E2C3 (0xc bytes), align: 1
  Segment part 22.            Intra module refs:   I2c::receiveAck()
                                                   I2c::receiveByte(uint8_t)
                                                   I2c::sendByte(uint8_t)
                                                   I2c::start()
                                                   I2c::stop()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2c::delayUs(uint8_t)   E2B8 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: D91E - D98D (0x70 bytes), align: 1
  Segment part 29.            Intra module refs:   I2c::ReadByte(uint8_t)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2c::receiveByte(uint8_t)
                                   D91E 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: D6C8 - D747 (0x80 bytes), align: 1
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2c::ReadByte(uint8_t)
                                   D6C8            Adxl345::Adxl345(uint8_t, uint8_t, uint8_t) (adxl345)
                                                   Adxl345::GetAngle() (adxl345)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: D9FC - DA5D (0x62 bytes), align: 1
  Segment part 31.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2c::WriteByte(uint8_t, uint8_t)
                                   D9FC            Adxl345::Adxl345(uint8_t, uint8_t, uint8_t) (adxl345)
                                                   Oled::writeCmd(uint8_t) (oled)
                                                   Oled::writeData(uint8_t) (oled)
               calls direct

    *************************************************************************

  FILE NAME : G:\study\MSP430\AngleMeasure\Debug\Obj\main.r43
  PROGRAM MODULE, NAME : main

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 0120 - 0121 (0x2 bytes), align: 0
  Segment part 1. ROOT        Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           WDTCTL                  0120 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: D83A - D8AD (0x74 bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main                    D83A            Segment part 19 (?cstart)
               calls direct

    *************************************************************************

  FILE NAME : G:\study\MSP430\AngleMeasure\Debug\Obj\oled.r43
  PROGRAM MODULE, NAME : oled

  SEGMENTS IN THE MODULE
  ======================
DATA16_C
  Relative segment, address: C020 - C03A (0x1b bytes), align: 0
  Segment part 2.             Intra module refs:   Oled::Oled(uint8_t, uint8_t, uint8_t)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: C03B - C03D (0x3 bytes), align: 0
  Segment part 3.             Intra module refs:   Oled::ShowNum(uint8_t, uint8_t, uint8_t)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: C03E - C121 (0xe4 bytes), align: 0
  Segment part 4.             Intra module refs:   Oled::ShowChar(uint8_t, uint8_t, uint8_t)
           LOCAL                   ADDRESS         
           =====                   =======         
           F6x8                    C03E 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: E302 - E309 (0x8 bytes), align: 1
  Segment part 5.             Intra module refs:   Oled::ClearAll()
                                                   Oled::Oled(uint8_t, uint8_t, uint8_t)
                                                   Oled::setPos(uint8_t, uint8_t)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Oled::writeCmd(uint8_t)
                                   E302 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: E2EE - E2F7 (0xa bytes), align: 1
  Segment part 8.             Intra module refs:   Oled::ClearAll()
                                                   Oled::ShowChar(uint8_t, uint8_t, uint8_t)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Oled::writeData(uint8_t)
                                   E2EE 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: DD3C - DD83 (0x48 bytes), align: 1
  Segment part 9.             Intra module refs:   Oled::ShowChar(uint8_t, uint8_t, uint8_t)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Oled::setPos(uint8_t, uint8_t)
                                   DD3C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: D98E - D9FB (0x6e bytes), align: 1
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Oled::Oled(uint8_t, uint8_t, uint8_t)
                                   D98E            main (main)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: DCA4 - DCEF (0x4c bytes), align: 1
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Oled::ClearAll()        DCA4            main (main)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: D8AE - D91D (0x70 bytes), align: 1
  Segment part 14.            Intra module refs:   Oled::ShowStr(uint8_t, uint8_t, uint8_t const *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Oled::ShowChar(uint8_t, uint8_t, uint8_t)
                                   D8AE 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: DF32 - DF67 (0x36 bytes), align: 1
  Segment part 15.            Intra module refs:   Oled::ShowNum(uint8_t, uint8_t, uint8_t)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Oled::ShowStr(uint8_t, uint8_t, uint8_t const *)
                                   DF32 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: DF9E - DFD1 (0x34 bytes), align: 1
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Oled::ShowNum(uint8_t, uint8_t, uint8_t)
                                   DF9E            main (main)
               calls direct

    *************************************************************************

  FILE NAME : G:\study\MSP430\AngleMeasure\Debug\Obj\uart.r43
  PROGRAM MODULE, NAME : uart

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 0001 - 0001 (0x1 bytes), align: 0
  Segment part 1. ROOT        Intra module refs:   UartInit()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IE2                     0001 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0003 - 0003 (0x1 bytes), align: 0
  Segment part 2. ROOT        Intra module refs:   UartSendData(uint8_t *, uint8_t)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IFG2                    0003 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0056 - 0056 (0x1 bytes), align: 0
  Segment part 3. ROOT        Intra module refs:   UartInit()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DCOCTL                  0056 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0057 - 0057 (0x1 bytes), align: 0
  Segment part 4. ROOT        Intra module refs:   UartInit()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BCSCTL1                 0057 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0041 - 0041 (0x1 bytes), align: 0
  Segment part 6. ROOT        Intra module refs:   UartInit()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1SEL2                  0041 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0061 - 0061 (0x1 bytes), align: 0
  Segment part 7. ROOT        Intra module refs:   UartInit()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA0CTL1                0061 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0062 - 0062 (0x1 bytes), align: 0
  Segment part 8. ROOT        Intra module refs:   UartInit()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA0BR0                 0062 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0063 - 0063 (0x1 bytes), align: 0
  Segment part 9. ROOT        Intra module refs:   UartInit()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA0BR1                 0063 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0064 - 0064 (0x1 bytes), align: 0
  Segment part 10. ROOT       Intra module refs:   UartInit()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA0MCTL                0064 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0066 - 0066 (0x1 bytes), align: 0
  Segment part 11. ROOT       Intra module refs:   USCI0RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA0RXBUF               0066 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0067 - 0067 (0x1 bytes), align: 0
  Segment part 12. ROOT       Intra module refs:   UartSendData(uint8_t *, uint8_t)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA0TXBUF               0067 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 10FE - 10FE (0x1 bytes), align: 0
  Segment part 13. ROOT       Intra module refs:   UartInit()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CALDCO_1MHZ             10FE 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 10FF - 10FF (0x1 bytes), align: 0
  Segment part 14. ROOT       Intra module refs:   UartInit()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CALBC1_1MHZ             10FF 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: DE88 - DEC3 (0x3c bytes), align: 1
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UartInit()              DE88            main (main)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: E108 - E123 (0x1c bytes), align: 1
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UartSendData(uint8_t *, uint8_t)
                                   E108            main (main)
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 0200 - 0200 (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   USCI0RX_ISR()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           is_sendable             0200            main (main)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: E30A - E311 (0x8 bytes), align: 1
  Segment part 22.            Intra module refs:   USCI0RX_ISR()::??INTVEC 14
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           USCI0RX_ISR()           E30A 
               interrupt function
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: FFE0 - FFEF (0x10 bytes), align: 1
  Segment part 15. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           USCI0RX_ISR()::??INTVEC 14
                                   FFEE 

    *************************************************************************

  FILE NAME : D:\Software\MSP430\430\lib\dlib\dl430fn.r43
  LIBRARY MODULE, NAME : ?__dbg_break

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: E326 - E327 (0x2 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __DebugBreak            E326            __exit (?__exit)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?__exit

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: E1EE - E1FF (0x12 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __exit                  E1EE            Segment part 6 (?_exit)
                                                   _exit (?_exit)
               calls direct

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?atan

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: D63A - D6C7 (0x8e bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           atan                    D63A            Adxl345::getFuYang(uint16_t, uint16_t) (adxl345)
                                                   Adxl345::getHangXiang(uint16_t, uint16_t) (adxl345)
                                                   Adxl345::getHengGun(uint16_t, uint16_t) (adxl345)
               calls direct

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?_exit

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: E31E, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _exit                   E31E            exit (?exit)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: E31E - E321 (0x4 bytes), align: 1
  Segment part 6.             Intra module refs:   _exit

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?cstart

  SEGMENTS IN THE MODULE
  ======================
CSTACK
  Relative segment, address: 03B0, align: 1
  Segment part 1.
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 0200, align: 1
  Segment part 2.
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: C13C - C13F (0x4 bytes), align: 1
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __program_start         C13C            ?reset_vector (?reset_vector)
                                                   Absolute parts (?ABS_ENTRY_MOD)
           ?cstart_begin           C13C 
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: C140 - C14B (0xc bytes), align: 1
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstart_init_zero       C140            is_sendable (uart)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: C14C - C153 (0x8 bytes), align: 1
  Segment part 19.            Intra module refs:   Segment part 9
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstart_call_main       C14C 
           ?cstart_end             C154 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?reset_vector

  SEGMENTS IN THE MODULE
  ======================
RESET
  Relative segment, address: FFFE - FFFF (0x2 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?reset_vector           FFFE            Segment part 9 (?cstart)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?div64i

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: D58A - D639 (0xb0 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Div64u                 D58A            _LitobLarge (?xprintflarge)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: E13E - E157 (0x1a bytes), align: 1
  Segment part 4.             Intra module refs:   _Div64u

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?div

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: E18A - E19F (0x16 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           div                     E18A            _GenldLarge (?xprintflarge)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?Epilogue

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: E26E - E26F (0x2 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Epilogue6              E26E            _GenldLarge (?xprintflarge)
                                                   _LdtobLarge (?xprintflarge)
                                                   _LitobLarge (?xprintflarge)
                                                   _PrintfLarge (?xprintflarge)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: E270 - E271 (0x2 bytes), align: 1
  Segment part 3.             Intra module refs:   ?Epilogue6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Epilogue5              E270            Adxl345::GetAngle() (adxl345)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: E272 - E273 (0x2 bytes), align: 1
  Segment part 4.             Intra module refs:   ?Epilogue5
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Epilogue4              E272            Adxl345::Adxl345(uint8_t, uint8_t, uint8_t) (adxl345)
                                                   Oled::Oled(uint8_t, uint8_t, uint8_t) (oled)
                                                   Oled::ShowStr(uint8_t, uint8_t, uint8_t const *) (oled)
                                                   _PutcharsLarge (?xprintflarge)
                                                   pad (?xprintflarge)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: E274 - E27B (0x8 bytes), align: 1
  Segment part 5.             Intra module refs:   ?Epilogue4
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Epilogue3              E274            Adxl345::doubleToUint16(double) (adxl345)
                                                   Adxl345::getFuYang(uint16_t, uint16_t) (adxl345)
                                                   Adxl345::getHangXiang(uint16_t, uint16_t) (adxl345)
                                                   Adxl345::getHengGun(uint16_t, uint16_t) (adxl345)
                                                   I2c::ReadByte(uint8_t) (i2c)
                                                   I2c::WriteByte(uint8_t, uint8_t) (i2c)
                                                   I2c::receiveByte(uint8_t) (i2c)
                                                   I2c::sendByte(uint8_t) (i2c)
                                                   Oled::ClearAll() (oled)
                                                   Oled::ShowChar(uint8_t, uint8_t, uint8_t) (oled)
                                                   Oled::ShowNum(uint8_t, uint8_t, uint8_t) (oled)
                                                   __iar_Atan (?xatan)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?exit

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: E322 - E325 (0x4 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           exit                    E322            Segment part 19 (?cstart)
               calls direct

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?fabs

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: DC56 - DCA3 (0x4e bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           fabs                    DC56            Adxl345::doubleToUint16(double) (adxl345)
               calls direct

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?Cast32f32i

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: D748 - D7C5 (0x7e bytes), align: 1
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Cast32uto32f           D748            Adxl345::getFuYang(uint16_t, uint16_t) (adxl345)
                                                   Adxl345::getHangXiang(uint16_t, uint16_t) (adxl345)
                                                   Adxl345::getHengGun(uint16_t, uint16_t) (adxl345)
                                                   _LdtobLarge (?xprintflarge)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : _Cast32fto32u

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: E2C4 - E2CF (0xc bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Cast32fto32u           E2C4            _LdtobLarge (?xprintflarge)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : _Cast32fto32s

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: DFD2 - E003 (0x32 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Cast32fto32s           DFD2            Adxl345::doubleToUint16(double) (adxl345)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_Extract

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: DCF0 - DD3B (0x4c bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_Extract            DCF0            _Cast32fto32s (_Cast32fto32s)
                                                   _Cast32fto32u (_Cast32fto32u)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_GE

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: DABA - DB0F (0x56 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_GE                 DABA            __iar_Atan (?xatan)
                                                   atan (?atan)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_LT

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: DB64 - DBB5 (0x52 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_LT                 DB64            Adxl345::doubleToUint16(double) (adxl345)
                                                   _LdtobLarge (?xprintflarge)
                                                   __iar_Atan (?xatan)
                                                   atan (?atan)
                                                   fabs (?fabs)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : _Mul32f

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: D124 - D233 (0x110 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Mul32f                 D124            Adxl345::getFuYang(uint16_t, uint16_t) (adxl345)
                                                   Adxl345::getHangXiang(uint16_t, uint16_t) (adxl345)
                                                   Adxl345::getHengGun(uint16_t, uint16_t) (adxl345)
                                                   _LdtobLarge (?xprintflarge)
                                                   __iar_Atan (?xatan)
                                                   scale (?xprintflarge)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : _Div32f

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: CED4 - D003 (0x130 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Div32f                 CED4            Adxl345::getFuYang(uint16_t, uint16_t) (adxl345)
                                                   Adxl345::getHangXiang(uint16_t, uint16_t) (adxl345)
                                                   Adxl345::getHengGun(uint16_t, uint16_t) (adxl345)
                                                   _LdtobLarge (?xprintflarge)
                                                   __iar_Atan (?xatan)
                                                   atan (?atan)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : _Add32f

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: CD70 - CD73 (0x4 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Sub32f                 CD70            Adxl345::getFuYang(uint16_t, uint16_t) (adxl345)
                                                   Adxl345::getHangXiang(uint16_t, uint16_t) (adxl345)
                                                   Adxl345::getHengGun(uint16_t, uint16_t) (adxl345)
                                                   _LdtobLarge (?xprintflarge)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: CD74 - CED3 (0x160 bytes), align: 1
  Segment part 1.             Intra module refs:   _Sub32f
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Add32f                 CD74            Adxl345::getFuYang(uint16_t, uint16_t) (adxl345)
                                                   Adxl345::getHangXiang(uint16_t, uint16_t) (adxl345)
                                                   Adxl345::getHengGun(uint16_t, uint16_t) (adxl345)
                                                   __iar_Atan (?xatan)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?Mul816

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: E004 - E007 (0x4 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Mul8                   E004            _LitobLarge (?xprintflarge)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: E008 - E035 (0x2e bytes), align: 1
  Segment part 1.             Intra module refs:   ?Mul8
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Mul16                  E008 
           ?Mul16to32u             E008            ?Mul16to32s (?Mul16to32s)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?Mul16to32s

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: E124 - E13D (0x1a bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Mul16to32s             E124            _LdtobLarge (?xprintflarge)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?DivMod816u

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: E172 - E189 (0x18 bytes), align: 1
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?DivMod16u              E172            ?DivMod16s (?DivMod816s)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?DivMod816s

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: E036 - E065 (0x30 bytes), align: 1
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?DivMod16s              E036            div (?div)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?DivMod32u

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: DEC4 - DEFB (0x38 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?DivMod32u              DEC4            ?DivMod32s (?DivMod32s)
                                                   _LdtobLarge (?xprintflarge)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?DivMod32s

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: DDCC - DE0B (0x40 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?DivMod32s              DDCC            _LdtobLarge (?xprintflarge)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?ShiftRight16u_n

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: E158 - E15B (0x4 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ShiftRight16u_7        E158            __iar_Dunscale (?xdunscal)
                                                   atan (?atan)
                                                   fabs (?fabs)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: E15C - E15F (0x4 bytes), align: 1
  Segment part 1.             Intra module refs:   ?ShiftRight16u_7
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ShiftRight16u_6        E15C 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: E160 - E163 (0x4 bytes), align: 1
  Segment part 2.             Intra module refs:   ?ShiftRight16u_6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ShiftRight16u_5        E160 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: E164 - E167 (0x4 bytes), align: 1
  Segment part 3.             Intra module refs:   ?ShiftRight16u_5
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ShiftRight16u_4        E164 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: E168 - E171 (0xa bytes), align: 1
  Segment part 4.             Intra module refs:   ?ShiftRight16u_4
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ShiftRight16u_3        E168 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memchr

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: E1B4 - E1C7 (0x14 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __iar_Memchr            E1B4            _PrintfLarge (?xprintflarge)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memcpy

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: E1DC - E1ED (0x12 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           memcpy                  E1DC            Segment part 11 (?xprintflarge)
                                                   _GenldLarge (?xprintflarge)
                                                   _LdtobLarge (?xprintflarge)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?CopyMemoryBytes

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: E224 - E233 (0x10 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?CopyMemoryBytes        E224            Oled::Oled(uint8_t, uint8_t, uint8_t) (oled)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memzero

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: E234 - E243 (0x10 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_memzero        E234            ?cstart_init_zero (?cstart)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?sprintf

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: DEFC - DF31 (0x36 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sprintf                 DEFC            Oled::ShowNum(uint8_t, uint8_t, uint8_t) (oled)
               calls direct

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?strchr

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: E244 - E251 (0xe bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __iar_Strchr            E244            _PrintfLarge (?xprintflarge)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?strlen

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: E200 - E211 (0x12 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strlen                  E200            _PrintfLarge (?xprintflarge)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xatan

  SEGMENTS IN THE MODULE
  ======================
DATA16_C
  Relative segment, address: C000 - C01F (0x20 bytes), align: 1
  Segment part 2.             Intra module refs:   __iar_Atan
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: D004 - D123 (0x120 bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __iar_Atan              D004            atan (?atan)
               calls direct

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xdunscal

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: DD84 - DDCB (0x48 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __iar_Dunscale          DD84            _LdtobLarge (?xprintflarge)
               calls direct

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xprintflarge

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: C8E0 - CD6F (0x490 bytes), align: 1
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _PrintfLarge            C8E0            sprintf (?sprintf)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: E288 - E293 (0xc bytes), align: 1
  Segment part 20.            Intra module refs:   _PrintfLarge
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: E2AC - E2B7 (0xc bytes), align: 1
  Segment part 22.            Intra module refs:   _PrintfLarge
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: E1C8 - E1DB (0x14 bytes), align: 1
  Segment part 25.            Intra module refs:   _PrintfLarge
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: C154 - C1D3 (0x80 bytes), align: 1
  Segment part 8.             Intra module refs:   _PrintfLarge
           LOCAL                   ADDRESS         
           =====                   =======         
           LoadInt                 C154 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: C1D4 - C1E1 (0xe bytes), align: 1
  Segment part 9.             Intra module refs:   LoadInt
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: C1E2 - C441 (0x260 bytes), align: 1
  Segment part 10.            Intra module refs:   _LdtobLarge
           LOCAL                   ADDRESS         
           =====                   =======         
           _GenldLarge             C1E2 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: C442 - C451 (0x10 bytes), align: 1
  Segment part 11.            Intra module refs:   _GenldLarge
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: C452 - C46F (0x1e bytes), align: 1
  Segment part 12.            Intra module refs:   _GenldLarge
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: C470 - C4C1 (0x52 bytes), align: 1
  Segment part 13.            Intra module refs:   _LdtobLarge
           LOCAL                   ADDRESS         
           =====                   =======         
           scale                   C470 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: C4C2 - C713 (0x252 bytes), align: 1
  Segment part 14.            Intra module refs:   _PrintfLarge
           LOCAL                   ADDRESS         
           =====                   =======         
           _LdtobLarge             C4C2 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: C714 - C8C3 (0x1b0 bytes), align: 1
  Segment part 15.            Intra module refs:   _PrintfLarge
           LOCAL                   ADDRESS         
           =====                   =======         
           _LitobLarge             C714 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: C8C4 - C8D5 (0x12 bytes), align: 1
  Segment part 16.            Intra module refs:   _LitobLarge
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: C8D6 - C8DF (0xa bytes), align: 1
  Segment part 17.            Intra module refs:   LoadInt
                                                   _LitobLarge
                                                   _PrintfLarge
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: DF68 - DF9D (0x36 bytes), align: 1
  Segment part 26.            Intra module refs:   Segment part 22
           LOCAL                   ADDRESS         
           =====                   =======         
           pad                     DF68 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: E0C2 - E0E5 (0x24 bytes), align: 1
  Segment part 27.            Intra module refs:   _PrintfLarge
                                                   _PutcharsLarge
           LOCAL                   ADDRESS         
           =====                   =======         
           _PutcharLarge           E0C2 
               calls indirect
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: E096 - E0C1 (0x2c bytes), align: 1
  Segment part 28.            Intra module refs:   Segment part 20
                                                   pad
           LOCAL                   ADDRESS         
           =====                   =======         
           _PutcharsLarge          E096 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: E252 - E25F (0xe bytes), align: 1
  Segment part 19.            Intra module refs:   _PrintfLarge
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: E260 - E26D (0xe bytes), align: 1
  Segment part 21.            Intra module refs:   _PrintfLarge
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: E212 - E223 (0x12 bytes), align: 1
  Segment part 23.            Intra module refs:   _PrintfLarge
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: DE4A - DE87 (0x3e bytes), align: 1
  Segment part 24.            Intra module refs:   _PrintfLarge
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: C122 - C128 (0x7 bytes), align: 0
  Segment part 2.             Intra module refs:   _PrintfLarge
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: C129 - C12C (0x4 bytes), align: 0
  Segment part 3.             Intra module refs:   _LdtobLarge
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: C12D - C130 (0x4 bytes), align: 0
  Segment part 4.             Intra module refs:   _LdtobLarge
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: C131 - C134 (0x4 bytes), align: 0
  Segment part 5.             Intra module refs:   _LdtobLarge
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: C135 - C138 (0x4 bytes), align: 0
  Segment part 6.             Intra module refs:   _LdtobLarge
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: C139 - C13A (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   _GenldLarge

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xsprout

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: E294 - E29F (0xc bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _SProut                 E294            sprintf (?sprintf)




                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
DATA16_AN                              0001 - 0001               1   rel    0
                                       0003 - 0003               1 
                                       0020 - 0022               3 
                                       0026 - 002A               5 
                                       002E - 002F               2 
                                       0041 - 0041               1 
                                       0056 - 0057               2 
                                       0061 - 0064               4 
                                       0066 - 0067               2 
                                       0120 - 0121               2 
DATA16_I                                  0200                       dse    0
DATA16_Z                               0200 - 0200               1   rel    1
CSTACK                                 03B0 - 03FF              50   rel    1
DATA16_AN                              10FE - 10FF               2   rel    0
DATA16_C                               C000 - C13A             13B   rel    1
CSTART                                 C13C - C153              18   rel    1
<CODE> 1                               C154 - E327            21D4   rel    1
INTVEC                                 FFE0 - FFEF              10   com    1
RESET                                  FFFE - FFFF               2   rel    1

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 8 702 bytes of CODE  memory
    81 bytes of DATA  memory (+ 25 absolute )
   315 bytes of CONST memory

Errors: none
Warnings: none

